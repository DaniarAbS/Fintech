<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Fintech || Главная Страница</title>
    <link href="main_page.css" rel="stylesheet" />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css?family=Manrope"
    />
  </head>
  <body>
    <div class="container">
      <div class="div-4">
        <a href="/" class="div-5">Главная</a>
        <a href="/credits" class="div-5">Кредиты</a>
        <a href="/budget" class="div-5">Бюджет</a>
        <a href="/payments" class="div-5">Платежи</a>
        <a href="/virtual_helper" class="div-5">Виртуальный помощник</a>
      </div>

      <div class="welcome_container">
        <div class="left-content">
          <h1 class="welcome_text">
            Первый в Казахстане <br />
            банковский сервис <br />
            для студентов
          </h1>
          <button class="button">Начать</button>
        </div>

        <div class="right-content">
          <img
            class="overlay-image"
            src="images/welcome_man.png"
            alt="Person Image"
            width="550"
            height="701,25"
          />
          <img
            class="background-image"
            src="images/фон круг.png"
            alt=""
            width="600"
            height="600"
          />
        </div>
      </div>

      <span class="our-services">Наши услуги:</span>

      <div class="services_container">
        <span class="monitoring_budget">
          <h2>
            Отслеживание <br />
            бюджета
          </h2>
          <p class="v0_710">подробнее</p>
        </span>

        <span class="educational_credit">
          <h2>
            Оформление <br />
            образовательных <br />
            кредитов
          </h2>
          <p class="v0_711">подробнее</p>
        </span>

        <span class="virtual_helper">
          <h2>
            Виртуальный <br />
            помощник
          </h2>
          <p class="v0_712">подробнее</p>
        </span>

        <span class="outcome_monitoring">
          <h2>
            Мониторинг<br />
            расходов
          </h2>
          <p class="v0_713">подробнее</p>
        </span>

        <span class="benefit_calculator">
          <h2>
            Калькулятор <br />
            льгот
          </h2>
          <p class="v0_714">подробнее</p>
        </span>

        <span class="personal_financial_position">
          <h2>
            Личное финансовое <br />
            положение
          </h2>
          <p class="v0_715">подробнее</p>
        </span>
      </div>

      <span class="why_work_text">Почему с нами стоит работать:</span>

      <div class="why_work_container">
        <div class="v0_658">
          <img
            src="images/raise_of_money.png"
            alt=""
            width="170"
            height="170"
          />
          <h2 class="v0_661">
            Финансовая <br />
            грамотность
          </h2>
          <p class="v0_672">
            Мы поможем вам <br />
            распределять ваш бюджет и <br />
            правильно пользоваться им.
          </p>
        </div>

        <div class="v0_662">
          <img
            src="images/phone_purchase.png"
            alt=""
            width="170"
            height="170"
          />
          <h2 class="v0_665">Онлайн платежи</h2>
          <p class="v0_671">
            Возможность оплачивать <br />
            учебные сборы, столовые, <br />
            учебные материалы и <br />
            другие расходы онлайн.
          </p>
        </div>

        <div class="v0_666">
          <img src="images/credit_card.png" alt="" width="170" height="170" />
          <h2 class="v0_669">
            Студенческие <br />
            кредиты
          </h2>
          <p class="v0_670">
            Мы информируем и <br />
            упрощаем процесс <br />
            подачи заявок и делаем <br />
            их выгодными.
          </p>
        </div>
      </div>

      <div class="add_info">
        <div class="left_side_info">
          <h2 class="our_adress_text">Наш адрес:</h2>

          <div class="choose_button">
            <p class="choose_city">Выберите город</p>
            <!-- <div class="name"></div> -->
          </div>

          <p class="address_text_format">Тараз, Пушкина 154</p>

          <p class="work_24">Работает круглосуточно!</p>

          <h2 class="contacts">Контакты:</h2>

          <p class="number_505">Для физических лиц ----- 505</p>

          <p class="number_605">Для бизнес клиентов ----- 605</p>

          <p class="ask_virtual_helper">Спросить у виртуального помощника</p>
        </div>

        <div id="map-container">
          <div id="locations-panel">
            <div id="locations-panel-list">
              <div class="section-name" id="location-results-section-name">
                All locations
              </div>
              <div class="results">
                <ul id="location-results-list"></ul>
              </div>
            </div>
          </div>
          <div id="gmp-map"></div>
        </div>

      </div>
    </div>
    <div class="footer">
      <div class="left_side_container">
          <h1>Мы в соц. сетях:</h1>
          <div class="img_and_texts">
              <div class="telegram">
                  <img src="/views/images/telegram (1) 1.png" alt="">
                  <a href=""><p>bcc.kz</p></a>
              </div>
              <div class="instagram">
                  <img src="/views/images/instagram (6) 1.png" alt="">
                  <a href=""><p>bcc.kz</p></a>
              </div>
              <div class="virtual_helper_footer">
                  <img src="/views/images/speech-bubble 1.png" alt="">
                  <a href=""><p>Виртуальный помощник</p></a>
              </div>
          </div>
      </div>
      <div class="right_side_container">
          <div class="first_column_footer">
              <a href=""><p>Контакты</p></a>
              <a href=""><p>Профиль</p></a>
              <a href=""><p>Кредиты</p></a>
          </div>
          <div class="second_column_footer">
              <a href=""><p>Долги</p></a>
              <a href=""><p>Бюджеты</p></a>
              <a href=""><p>Платежи</p></a>
          </div>
      </div>
  </div>
<script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY_HERE&callback=initMap&libraries=places&solution_channel=GMP_QB_locatorplus_v7_c" async defer></script>
    <!-- <script
      src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initMap"
      async
      defer
    ></script> -->
    <script>
      const path = require("path");

      const createPath = (page) =>
        path.resolve(__dirname, "ejs-views", `${page}.ejs`);

      // function initMap() {
      //   var map = new google.maps.Map(document.getElementById("map"), {
      //     center: { lat: -34.397, lng: 150.644 },
      //     zoom: 8,
      //   });
      // }
    </script>


<script>
  'use strict';

  /** Helper function to generate a Google Maps directions URL */
  function generateDirectionsURL(origin, destination) {
    const googleMapsUrlBase = 'https://www.google.com/maps/dir/?';
    const searchParams = new URLSearchParams('api=1');
    searchParams.append('origin', origin);
    const destinationParam = [];
    // Add title to destinationParam except in cases where Quick Builder set
    // the title to the first line of the address
    if (destination.title !== destination.address1) {
      destinationParam.push(destination.title);
    }
    destinationParam.push(destination.address1, destination.address2);
    searchParams.append('destination', destinationParam.join(','));
    return googleMapsUrlBase + searchParams.toString();
  }

  /**
   * Defines an instance of the Locator+ solution, to be instantiated
   * when the Maps library is loaded.
   */
  function LocatorPlus(configuration) {
    const locator = this;

    locator.locations = configuration.locations || [];
    locator.capabilities = configuration.capabilities || {};

    const mapEl = document.getElementById('gmp-map');
    const panelEl = document.getElementById('locations-panel');
    locator.panelListEl = document.getElementById('locations-panel-list');
    const sectionNameEl =
        document.getElementById('location-results-section-name');
    const resultsContainerEl = document.getElementById('location-results-list');

    const itemsTemplate = Handlebars.compile(
        document.getElementById('locator-result-items-tmpl').innerHTML);

    locator.selectedLocationIdx = null;
    locator.userCountry = null;

    // Initialize the map -------------------------------------------------------
    locator.map = new google.maps.Map(mapEl, configuration.mapOptions);

    // Store selection.
    const selectResultItem = function(locationIdx, panToMarker, scrollToResult) {
      locator.selectedLocationIdx = locationIdx;
      for (let locationElem of resultsContainerEl.children) {
        locationElem.classList.remove('selected');
        if (getResultIndex(locationElem) === locator.selectedLocationIdx) {
          locationElem.classList.add('selected');
          if (scrollToResult) {
            panelEl.scrollTop = locationElem.offsetTop;
          }
        }
      }
      if (panToMarker && (locationIdx != null)) {
        locator.map.panTo(locator.locations[locationIdx].coords);
      }
    };

    // Create a marker for each location.
    const markers = locator.locations.map(function(location, index) {
      const marker = new google.maps.Marker({
        position: location.coords,
        map: locator.map,
        title: location.title,
      });
      marker.addListener('click', function() {
        selectResultItem(index, false, true);
      });
      return marker;
    });

    // Fit map to marker bounds.
    locator.updateBounds = function() {
      const bounds = new google.maps.LatLngBounds();
      for (let i = 0; i < markers.length; i++) {
        bounds.extend(markers[i].getPosition());
      }
      locator.map.fitBounds(bounds);
    };
    if (locator.locations.length) {
      locator.updateBounds();
    }

    // Render the results list --------------------------------------------------
    const getResultIndex = function(elem) {
      return parseInt(elem.getAttribute('data-location-index'));
    };

    locator.renderResultsList = function() {
      let locations = locator.locations.slice();
      for (let i = 0; i < locations.length; i++) {
        locations[i].index = i;
      }
      sectionNameEl.textContent = `All locations (${locations.length})`;
      const resultItemContext = {locations: locations};
      resultsContainerEl.innerHTML = itemsTemplate(resultItemContext);
      for (let item of resultsContainerEl.children) {
        const resultIndex = getResultIndex(item);
        if (resultIndex === locator.selectedLocationIdx) {
          item.classList.add('selected');
        }

        const resultSelectionHandler = function() {
          if (resultIndex !== locator.selectedLocationIdx) {
            selectResultItem(resultIndex, true, false);
          }
        };

        // Clicking anywhere on the item selects this location.
        // Additionally, create a button element to make this behavior
        // accessible under tab navigation.
        item.addEventListener('click', resultSelectionHandler);
        item.querySelector('.select-location')
            .addEventListener('click', function(e) {
              resultSelectionHandler();
              e.stopPropagation();
            });

        // Clicking the directions button will open Google Maps directions in a
        // new tab
        const origin = (locator.searchLocation != null) ?
            locator.searchLocation.location :
            '';
        const destination = locator.locations[resultIndex];
        const googleMapsUrl = generateDirectionsURL(origin, destination);
        item.querySelector('.directions-button')
            .setAttribute('href', googleMapsUrl);
      }
    };

    // Optional capability initialization --------------------------------------

    // Initial render of results -----------------------------------------------
    locator.renderResultsList();
  }
</script>
<script>
  const CONFIGURATION = {
    "locations": [
      {"title":"Улица Сулейменова 60","address1":"Улица Сулейменова 60","address2":"Тараз, Казахстан","coords":{"lat":42.906386612032975,"lng":71.36718380251615},"placeId":"EidTdWxleW1lbm92IFN0cmVldCA2MCwgVGFyYXosIEthemFraHN0YW4iMBIuChQKEgmXZS3TJAOnOBG3v9F4DH85TRA8KhQKEgn3C0gmJQOnOBGMUM_BZGWlsA"}
    ],
    "mapOptions": {"center":{"lat":38.0,"lng":-100.0},"fullscreenControl":true,"mapTypeControl":false,"streetViewControl":false,"zoom":4,"zoomControl":true,"maxZoom":17,"mapId":""},
    "mapsApiKey": "YOUR_API_KEY_HERE",
    "capabilities": {"input":false,"autocomplete":false,"directions":false,"distanceMatrix":false,"details":false,"actions":false}
  };

  function initMap() {
    new LocatorPlus(CONFIGURATION);
  }
</script>
<script id="locator-result-items-tmpl" type="text/x-handlebars-template">
  {{#each locations}}
    <li class="location-result" data-location-index="{{index}}">
      <button class="select-location">
        <h2 class="name">{{title}}</h2>
      </button>
      <div class="address">{{address1}}<br>{{address2}}</div>
      <a class="directions-button" href="" target="_blank" title="Get directions to this location on Google Maps">
        <svg width="34" height="34" viewBox="0 0 34 34"
              fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M17.5867 9.24375L17.9403 8.8902V8.8902L17.5867 9.24375ZM16.4117 9.24375L16.7653 9.59731L16.7675 9.59502L16.4117 9.24375ZM8.91172 16.7437L8.55817 16.3902L8.91172 16.7437ZM8.91172 17.9229L8.55817 18.2765L8.55826 18.2766L8.91172 17.9229ZM16.4117 25.4187H16.9117V25.2116L16.7652 25.0651L16.4117 25.4187ZM16.4117 25.4229H15.9117V25.63L16.0582 25.7765L16.4117 25.4229ZM25.0909 17.9229L25.4444 18.2765L25.4467 18.2742L25.0909 17.9229ZM25.4403 16.3902L17.9403 8.8902L17.2332 9.5973L24.7332 17.0973L25.4403 16.3902ZM17.9403 8.8902C17.4213 8.3712 16.5737 8.3679 16.0559 8.89248L16.7675 9.59502C16.8914 9.4696 17.1022 9.4663 17.2332 9.5973L17.9403 8.8902ZM16.0582 8.8902L8.55817 16.3902L9.26527 17.0973L16.7653 9.5973L16.0582 8.8902ZM8.55817 16.3902C8.0379 16.9105 8.0379 17.7562 8.55817 18.2765L9.26527 17.5694C9.13553 17.4396 9.13553 17.227 9.26527 17.0973L8.55817 16.3902ZM8.55826 18.2766L16.0583 25.7724L16.7652 25.0651L9.26517 17.5693L8.55826 18.2766ZM15.9117 25.4187V25.4229H16.9117V25.4187H15.9117ZM16.0582 25.7765C16.5784 26.2967 17.4242 26.2967 17.9444 25.7765L17.2373 25.0694C17.1076 25.1991 16.895 25.1991 16.7653 25.0694L16.0582 25.7765ZM17.9444 25.7765L25.4444 18.2765L24.7373 17.5694L17.2373 25.0694L17.9444 25.7765ZM25.4467 18.2742C25.9631 17.7512 25.9663 16.9096 25.438 16.3879L24.7354 17.0995C24.8655 17.2279 24.8687 17.4363 24.7351 17.5716L25.4467 18.2742Z" fill="#1967d2"/>
          <path fill-rule="evenodd" clip-rule="evenodd" d="M19 19.8333V17.75H15.6667V20.25H14V16.9167C14 16.4542 14.3708 16.0833 14.8333 16.0833H19V14L21.9167 16.9167L19 19.8333Z" fill="#1967d2"/>
          <circle class="directions-button-background" cx="17" cy="17" r="16.5" stroke="#e0e0e0"/>
        </svg>
      </a>
    </li>
  {{/each}}
</script>
  </body>
</html>
